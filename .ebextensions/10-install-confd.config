commands:
    01-install-jq:
        command: /var/confd/install-jq.sh
    02-install-confd:
        command: /var/confd/install-confd.sh
    03-configure-confd:
        command: /var/confd/configure-confd.sh
        env:
            CONFD_APP_NAME: 'sample-app'
            CONFD_ENVIRONMENT: 'dev'           # replace this upon deploy

services:
    sysvinit:
        confd_agent:
            enabled: "true"
            ensureRunning: "true"
            files:
                - "/etc/confd/confd.toml"
                - "/etc/confd/conf.d/application.toml"
                - "/etc/confd/templates/application.json.tmpl"

files:
    "/etc/confd/confd.toml":
        mode: "000644"
        content: |
            backend = "ssm"
            confdir = "/etc/confd"

            log-level = "info"
            watch = false           # ssm does not support watch as of confd 0.14
            interval = 30

    "/etc/confd/conf.d/application.toml":
        mode: "000644"
        content: |
            [template]
            src = "/etc/confd/templates/application.json.tmpl"
            dest = "/etc/confd/generated/application.json"

            uid = REPLACE_BEANSTALK_USER
            gid = REPLACE_BEANSTALK_GROUP

            prefix = "/confd/REPLACE_CONFD_APP_NAME/REPLACE_CONFD_ENVIRONMENT"
            keys = ["/"]

            check_cmd = "jq . {{ .src }}"

    "/etc/confd/templates/application.json.tmpl":
        mode: "000644"
        content: |
            {
            {{ range gets "/*" }}
                {{ printf "%q" (base .Key) }}: {{ printf "%q" .Value }},{{ end }}

                "_generated": "{{ datetime.Format "2006-01-02T15:04:05Z" }}"
            }

    "/var/confd/install-jq.sh":
        mode: "000755"
        content: |
            #!/usr/bin/env bash
            set -e

            jq_source_url="https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64"
            jq_target_bin="/usr/bin/jq"

            install_jq=false
            which jq || install_jq=true

            if [[ "${install_jq}" == true ]] ; then
                echo "Installing jq to ${jq_target_bin} from (${jq_source_url})"
                curl -sL "${jq_source_url}" -o "${jq_target_bin}"
                chmod +x ${jq_target_bin}
            fi

    "/var/confd/install-confd.sh":
        mode: "000755"
        content: |
            #!/usr/bin/env bash
            set -e

            confd_source_url="https://github.com/kelseyhightower/confd/releases/download/v0.14.0/confd-0.14.0-linux-amd64"
            confd_target_bin="/usr/bin/confd"

            install_confd=false
            which confd || install_confd=true

            if [[ "${install_confd}" == true ]] ; then
                echo "Installing confd to ${confd_target_bin} from (${confd_source_url})"
                curl -sL "${confd_source_url}" -o "${confd_target_bin}"
                chmod +x ${confd_target_bin}
            fi

    "/var/confd/configure-confd.sh":
        mode: "000755"
        content: |
            #!/usr/bin/env bash
            set -e

            if [ -z "${CONFD_APP_NAME}" ]; then
                echo "Cannot find application name. Please set \$CONFD_APP_NAME"
                exit 1
            fi

            if [ -z "${CONFD_ENVIRONMENT}" ]; then
                echo "Cannot find environment name. Please set \$CONFD_ENVIRONMENT."
                exit 1
            fi

            config_file="/etc/confd/conf.d/application.toml"
            if [ -f "${config_file}" ]; then
                sed -i "s#REPLACE_CONFD_APP_NAME#${CONFD_APP_NAME}#g" $config_file
                sed -i "s#REPLACE_CONFD_ENVIRONMENT#${CONFD_ENVIRONMENT}#g" $config_file

                beanstalk_uid=$(id -u webapp)
                beanstalk_gid=$(id -g webapp)

                sed -i "s#REPLACE_BEANSTALK_USER#${beanstalk_uid}#g" $config_file
                sed -i "s#REPLACE_BEANSTALK_GROUP#${beanstalk_gid}#g" $config_file
            fi

    "/etc/init.d/confd_agent":
        mode: "000755"
        content: |
            #!/bin/sh
            ### BEGIN INIT INFO
            # Provides:          confd_agent
            # Required-Start:    $local_fs $network $named $time $syslog
            # Required-Stop:     $local_fs $network $named $time $syslog
            # Default-Start:     2 3 4 5
            # Default-Stop:      0 1 6
            # Description:       Service for the confd agent
            ### END INIT INFO

            SCRIPT=confd
            RUNAS=root

            PIDFILE=/var/run/confd_agent.pid
            LOGFILE=/var/log/confd_agent.log

            start() {
              if [ -f "$PIDFILE" ] && kill -0 $(cat "$PIDFILE"); then
                echo 'Service already running' >&2
                return 1
              fi
              echo 'Starting service...' >&2
              local CMD="$SCRIPT &> \"$LOGFILE\" & echo \$!"
              su -c "$CMD" $RUNAS > "$PIDFILE"
              echo 'Service started' >&2
            }

            stop() {
              if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
                echo 'Service not running' >&2
                return 1
              fi
              echo 'Stopping service...' >&2
              kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
              echo 'Service stopped' >&2
            }

            uninstall() {
              echo -n "Are you really sure you want to uninstall this service? That cannot be undone. [yes|No] "
              local SURE
              read SURE
              if [ "$SURE" = "yes" ]; then
                stop
                rm -f "$PIDFILE"
                echo "Notice: log file is not be removed: '$LOGFILE'" >&2
                update-rc.d -f <NAME> remove
                rm -fv "$0"
              fi
            }

            case "$1" in
              start)
                start
                ;;
              stop)
                stop
                ;;
              uninstall)
                uninstall
                ;;
              retart)
                stop
                start
                ;;
              *)
                echo "Usage: $0 {start|stop|restart|uninstall}"
            esac

